include:
  - remote: https://raw.githubusercontent.com/vcrini/fgitlab-ci-template/pipeline_merge_request_only/template.yml

default:
image:
  # see releases here: https://gitlab.com/gitlab-org/terraform-images/container_registry?orderBy=UPDATED&sort=desc&search[]=releases&search[]=
  name: "$CI_TEMPLATE_REGISTRY_HOST/gitlab-org/terraform-images/releases/1.5:v1.7.1"

fmt:
  extends: .terraform:fmt
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never

validate:
  extends: .terraform:validate
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never

tfsec:
  image:
    # https://hub.docker.com/r/aquasec/tfsec-ci/tags
    #name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/aquasec/tfsec-ci:v1.28.4
    name: aquasec/tfsec-ci:v1.28.4
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  stage: validate
  before_script:
    - echo CI_COMMIT_BRANCH $CI_COMMIT_BRANCH
    - echo CI_OPEN_MERGE_REQUESTS $CI_OPEN_MERGE_REQUESTS
    - echo CI_PIPELINE_SOURCE $CI_PIPELINE_SOURCE
    - cd $TF_ROOT
  script:
    - tfsec
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never

tflint:
  image:
    # https://github.com/terraform-linters/tflint/pkgs/container/tflint
    #name: ghcr.io/terraform-linters/tflint:v0.50.0
    # docker pull shinomineko/tflint:v0.50.1
    #name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/shinomineko/tflint:v0.50.1
    name: shinomineko/tflint:v0.50.1
    entrypoint: [""]
  stage: validate
  before_script:
    - cd $TF_ROOT
  script:
    - tflint -v
    - tflint --init
    - tflint
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never

infracost:
  stage: test
  image:
    # https://hub.docker.com/r/infracost/infracost/tags
    #name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/infracost/infracost:ci-0.10.31
    name: infracost/infracost:ci-0.10.31
    entrypoint: [""] # Override since we're running commands below
  before_script:
    - cd ${TF_ROOT}
  script:
    - infracost breakdown --path . --terraform-var-file="./config/dev/eu-south-1/terraform.tfvars"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
#plan:
#  extends: .terraform:plan
#  environment:
#    name: $TF_STATE_NAME
#    action: prepare
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#    - if: $CI_OPEN_MERGE_REQUESTS # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
#      when: never
apply:
  extends: apply
  before_script:
    - echo CI_COMMIT_BRANCH $CI_COMMIT_BRANCH
    - echo CI_OPEN_MERGE_REQUESTS $CI_OPEN_MERGE_REQUESTS
    - echo CI_PIPELINE_SOURCE $CI_PIPELINE_SOURCE
